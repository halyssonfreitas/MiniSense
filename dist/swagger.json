{
  "openapi": "3.0.0",
  "info": {
    "title": "API MiniSense",
    "description": "Essa API é um subconjunto da API Sense",
    "termsOfService": "http://google.com",
    "contact": {
      "email": "halyssonfreitas@gmail.com"
    },
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3050/api/v1",
      "description": "API local para teste em desenvolvimento"
    },
    {
      "url": "http://aindanaoexiste.com/api/v1",
      "description": "API em produção"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Everything about your User",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://hackmd.io/@senseup/minisense-spec/%2FvXh82V3QQlasq4HBqzbYtQ"
      }
    },
    {
      "name": "SensorDevice",
      "description": "Everything about your SensorDevice",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://hackmd.io/@senseup/minisense-spec/%2FvXh82V3QQlasq4HBqzbYtQ"
      }
    },
    {
      "name": "DataStream",
      "description": "Everything about your DataStream",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://hackmd.io/@senseup/minisense-spec/%2FvXh82V3QQlasq4HBqzbYtQ"
      }
    },
    {
      "name": "SensorData",
      "description": "Everything about your SensorData",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://hackmd.io/@senseup/minisense-spec/%2FvXh82V3QQlasq4HBqzbYtQ"
      }
    },
    {
      "name": "MeasurementUnit",
      "description": "Everything about your MeasurementUnit",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://hackmd.io/@senseup/minisense-spec/%2FvXh82V3QQlasq4HBqzbYtQ"
      }
    }
  ],
  "paths": {
    "/User": {
      "get": {
        "summary": "For get all User resgisters",
        "description": "This is the route for get all User resgisters",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "For new User",
        "description": "This is the route for create new User",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "UserPost": {
                  "value": {
                    "username": "Halysson Freitas",
                    "email": "halyssonfreitas@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "For update User - -----> Not implemented <-----",
        "description": "This is the route for update an User exist register",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "For delete User  - -----> Not implemented <-----",
        "description": "This is the route for delete an User exist register",
        "tags": [
          "User"
        ]
      }
    },
    "/SensorDevice/{id}": {
      "get": {
        "summary": "For get SensorDevice by Id",
        "description": "This is the route for get SensorDevice by Id. It needs to give a parameter that indicates a Id that it will pull.",
        "tags": [
          "SensorDevice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SensorDevice id for pull",
            "require": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SensorDeviceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/SensorDevice/{user}": {
      "post": {
        "summary": "For new SensorDevice",
        "description": "This is the route for create new SensorDevice. It needs to give a parameter that indicates a User that it will own.",
        "tags": [
          "SensorDevice"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "User id for your SensorDevice",
            "require": "true"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorDeviceRequest"
              },
              "examples": {
                "UserPost": {
                  "value": {
                    "label": "Kitchen's freezer sensor (Arduino)",
                    "description": "Kitchen's freezer sensor (Arduino)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SensorDeviceResponseCreate"
                }
              }
            }
          }
        }
      }
    },
    "/SensorDevice/getByUser/{user}": {
      "get": {
        "summary": "For get all SensorDevice that is User owned",
        "description": "For get all SensorDevice that is User owned, by passing User id as parameter.",
        "tags": [
          "SensorDevice"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "User id for search yours SensorDevice",
            "require": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SensorDeviceResponseList"
                }
              }
            }
          }
        }
      }
    },
    "/MeasurementUnit": {
      "get": {
        "summary": "For get all User resgisters",
        "description": "This is the route for get all User resgisters",
        "tags": [
          "MeasurementUnit"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/MeasurementUnit"
                }
              }
            }
          }
        }
      }
    },
    "/DataStream/{sensorDevice}": {
      "post": {
        "summary": "For new DataStream",
        "description": "This is the route for create new DataStream. It needs to give a parameter that indicates a SensorDevice that it will own.",
        "tags": [
          "DataStream"
        ],
        "parameters": [
          {
            "name": "sensorDevice",
            "in": "path",
            "description": "SensorDevice id for your DataStream",
            "require": "true"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataStreamRequest"
              },
              "examples": {
                "UserPost": {
                  "value": {
                    "label": "temperature",
                    "unitId": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DataStreamResponseCreate"
                }
              }
            }
          }
        }
      }
    },
    "/DataStream/{id}": {
      "get": {
        "summary": "For get DataStream by Id",
        "description": "This is the route for get DataStream by Id. It needs to give a parameter that indicates a Id that it will pull.",
        "tags": [
          "DataStream"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "DataStream id for pull",
            "require": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DataStreamResponse"
                }
              }
            }
          }
        }
      }
    },
    "/SensorData/{dataStream}": {
      "post": {
        "summary": "For new SensorData",
        "description": "This is the route for create new SensorData. It needs to give a parameter that indicates a DataStream that it will own.",
        "tags": [
          "SensorData"
        ],
        "parameters": [
          {
            "name": "dataStream",
            "in": "path",
            "description": "DataStream id for your SensorData",
            "require": "true"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorDataRequest"
              },
              "examples": {
                "UserPost": {
                  "value": {
                    "timestamp": "1506521102",
                    "value": 28.5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SensorDataResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "SensorDevices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_id": {
            "type": "string"
          }
        }
      },
      "SensorDeviceRequest": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SensorDeviceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "streams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "unitId": {
                  "type": "string"
                },
                "deviceId": {
                  "type": "string"
                },
                "measurementCount": {
                  "type": "number"
                },
                "measurements": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SensorDeviceResponseList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "streams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "unitId": {
                  "type": "string"
                },
                "deviceId": {
                  "type": "string"
                },
                "measurementCount": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "SensorDeviceResponseCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "MeasurementUnit": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        }
      },
      "SensorDataRequest": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "SensorDataResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "unitId": {
            "type": "string"
          }
        }
      },
      "DataStreamRequest": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          }
        }
      },
      "DataStreamResponseCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "measurementCount": {
            "type": "number"
          }
        }
      },
      "DataStreamResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "measurementCount": {
            "type": "number"
          },
          "measurements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "UserPost": {
        "value": {
          "username": "Halysson Freitas",
          "email": "halyssonfreitas@gmail.com",
          "SensorDevices": [
            "303030",
            "404040"
          ]
        }
      }
    }
  }
}